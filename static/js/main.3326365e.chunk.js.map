{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["getCornerPosition","pos","position","display","top","left","backgroundImage","justifyContent","alignItems","paddingLeft","paddingTop","bottom","paddingBottom","right","paddingRight","getIcon","iconSize","iconTheme","realSize","size","getGenericStyle","width","height","props","forkCornerStyle","allStyles","theme","icon","className","style","href","target","App","link","cornerPosition","ReactDOM","render","document","getElementById"],"mappings":"ibAwBA,IAAMA,EAAoB,SAACC,GACzB,aAAIA,EACK,CACLC,SADK,QAELC,QAFK,cAGLC,IAHK,EAILC,KAJK,EAKLC,gBALK,kFAOLC,eAPK,aAQLC,WARK,aASLC,YATK,OAULC,WAAY,UAET,OAAIT,EACF,CACLC,SADK,QAELC,QAFK,cAGLQ,OAHK,EAILN,KAJK,EAKLC,gBALK,mFAOLC,eAPK,aAQLC,WARK,WASLC,YATK,OAULG,cAAe,UAGnB,OAAIX,EACK,CACLC,SADK,QAELC,QAFK,cAGLQ,OAHK,EAILE,MAJK,EAKLP,gBALK,kFAOLC,eAPK,WAQLC,WARK,WASLM,aATK,OAULF,cAAe,UAGV,CACLV,SADK,QAELC,QAFK,cAGLC,IAHK,EAILS,MAJK,EAKLP,gBALK,iFAOLC,eAPK,WAQLC,WARK,aASLM,aATK,OAULJ,WAAY,WAKZK,EAAU,SAACC,EAAUC,GACzB,MAUA,OAREC,EADF,UAAIF,EACFE,GACK,WAAIF,EACTE,GACK,UAAIF,EACTE,GAEAA,GAEF,WAAID,EACK,uBAAQE,KAAMD,IAEd,uBAAQC,KAAMD,KAInBE,EAAkB,SAACD,GAEvB,gBAAIA,EACK,CACLE,MADK,SAELC,OAAQ,UAEL,WAAIH,EACF,CACLE,MADK,OAELC,OAAQ,QAEL,UAAIH,EACF,CACLE,MADK,QAELC,OAAQ,SAGH,CACLD,MADK,SAELC,OAAQ,W,EAlHd,SAAyBC,GACvB,IAAIC,EAAkBD,iBAClBvB,EAAkBuB,EADAA,gBAElBvB,EAFJ,MAGImB,EAAOI,OAAaA,EAAbA,KAAX,UAEIE,EAAY,EAAH,KADML,EAAnB,IAGIM,EAAQH,QAAcA,EAAdA,MAAZ,SACMI,EAAOZ,EAAQI,EAArB,GACA,OACE,yBAAKS,UAAL,oBAAmCC,MAAOJ,GACxC,uBAAGK,KAAMP,EAAT,KAAqBQ,OAAO,WAFhC,KCYaC,G,MAtBH,WACV,OAAO,yBAAKJ,UAAU,QACtB,kBAAC,EAAD,CACQK,KAAM,2CACNC,eAAgB,KAChBf,KAAM,UAER,kBAAC,EAAD,CAAiBc,KAAM,6CACvB,kBAAC,EAAD,CACEA,KAAM,2CACNC,eAAgB,KAChBf,KAAM,SACNO,MAAO,WAET,kBAAC,EAAD,CACEO,KAAM,2CACNC,eAAgB,KAChBf,KAAM,aChBhBgB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.3326365e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ReactForkCorner.scss\";\n\nimport { GitHub, Gitlab } from \"react-feather\";\n\nfunction ReactForkCorner(props) {\n  let forkCornerStyle = props.cornerPosition\n    ? getCornerPosition(props.cornerPosition)\n    : getCornerPosition(\"tr\");\n  let size = props.size ? props.size : \"regular\";\n  let genericStyle = getGenericStyle(size);\n  let allStyles = { ...forkCornerStyle, ...genericStyle };\n\n  let theme = props.theme ? props.theme : \"github\";\n  const icon = getIcon(size, theme);\n  return (\n    <div className=\"react-fork-corner\" style={allStyles}>\n      <a href={props.link} target=\"__blank\">\n        {icon}\n      </a>\n    </div>\n  );\n}\n\nconst getCornerPosition = (pos) => {\n  if (pos === \"tl\") {\n    return {\n      position:\"fixed\",\n      display:\"inline-flex\",\n      top: 0,\n      left: 0,\n      backgroundImage:\n        \"linear-gradient(-45deg,transparent 0%,transparent 50%,#f34f29 51%,#f34f29 100%)\",\n      justifyContent: \"flex-start\",\n      alignItems: \"flex-start\",\n      paddingLeft: \"1rem\",\n      paddingTop: \"0.5rem\"\n    };\n  } else if (pos === \"bl\") {\n    return {\n      position:\"fixed\",\n      display:\"inline-flex\",\n      bottom: 0,\n      left: 0,\n      backgroundImage:\n        \"linear-gradient(-135deg,transparent 0%,transparent 50%,#f34f29 51%,#f34f29 100%)\",\n      justifyContent: \"flex-start\",\n      alignItems: \"flex-end\",\n      paddingLeft: \"1rem\",\n      paddingBottom: \"0.5rem\"\n    };\n  }\n  if (pos === \"br\") {\n    return {\n      position:\"fixed\",\n      display:\"inline-flex\",\n      bottom: 0,\n      right: 0,\n      backgroundImage:\n        \"linear-gradient(135deg,transparent 0%,transparent 50%,#f34f29 51%,#f34f29 100%)\",\n      justifyContent: \"flex-end\",\n      alignItems: \"flex-end\",\n      paddingRight: \"1rem\",\n      paddingBottom: \"0.5rem\"\n    };\n  } else {\n    return {\n      position:\"fixed\",\n      display:\"inline-flex\",\n      top: 0,\n      right: 0,\n      backgroundImage:\n        \"linear-gradient(45deg,transparent 0%,transparent 50%,#f34f29 51%,#f34f29 100%)\",\n      justifyContent: \"flex-end\",\n      alignItems: \"flex-start\",\n      paddingRight: \"1rem\",\n      paddingTop: \"0.5rem\"\n    };\n  }\n};\n\nconst getIcon = (iconSize, iconTheme) => {\n  var realSize;\n  if (iconSize === \"small\") {\n    realSize = 36;\n  } else if (iconSize === \"medium\") {\n    realSize = 48;\n  } else if (iconSize === \"large\") {\n    realSize = 60;\n  } else {\n    realSize = 40;\n  }\n  if (iconTheme === \"gitlab\") {\n    return <Gitlab size={realSize} />;\n  } else {\n    return <GitHub size={realSize} />;\n  }\n};\n\nconst getGenericStyle = (size) => {\n \n  if (size === \"small\") {\n    return {\n      width: \"5.5rem\",\n      height: \"5.5rem\"\n    };\n  } else if (size === \"medium\") {\n    return {\n      width: \"7rem\",\n      height: \"7rem\"\n    };\n  } else if (size === \"large\") {\n    return {\n      width: \"10rem\",\n      height: \"10rem\"\n    };\n  } else {\n    return {\n      width: \"6.5rem\",\n      height: \"6.5rem\"\n    };\n  }\n};\n\nexport default ReactForkCorner;\n","import React from 'react'\nimport './index.css';\nimport ReactForkCorner  from 'react-fork-corner';\nimport 'react-fork-corner/dist/index.css'\n\nconst App = () => {\n  return <div className=\"App1\">\n  <ReactForkCorner\n          link={\"https://github.com/suhascv/calculator-js\"}\n          cornerPosition={\"tl\"}\n          size={\"small\"}\n        />\n        <ReactForkCorner link={\"https://github.com/suhascv/calculator-js\"} />\n        <ReactForkCorner\n          link={\"https://github.com/suhascv/calculator-js\"}\n          cornerPosition={\"bl\"}\n          size={\"medium\"}\n          theme={\"gitlab\"}\n        />\n        <ReactForkCorner\n          link={\"https://github.com/suhascv/calculator-js\"}\n          cornerPosition={\"br\"}\n          size={\"large\"}\n        />\n  </div>\n}\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}